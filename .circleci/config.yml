version: 2.1
executors:
  test-environement:
    docker:
      - image: node:lts-alpine
      - image: postgres:alpine
      - image: redis:alpine
    environment:
      API_PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: admin
      DB_USER: admin
      DB_PASSWORD: admin
      REDIS_HOST: redis
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: admin
  publisher-environement:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      PROJECT_NAME: project1-team-6

jobs:
  install:
    executor: test-environement
    steps:
      - checkout
      - run:
          name: Install app dependencies
          command: cd app && npm ci
      - persist_to_workspace:
          root: .
          paths:
            - ./app/node_modules

  tests:
    executor: test-environement
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy Node Modules Folder
          command: cp -r /tmp/workspace/app/node_modules ./app/node_modules
      - run:
          name: List app folder
          command: ls ./app/

  build:
    executor: publisher-environement
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker images
          command: docker build -f Dockerfile.prod -t nodeapi .
      - run:
          name: Save Docker image
          command: docker save -o ./${PROJECT_NAME}.tar nodeapi
      - persist_to_workspace:
          root: .
          paths:
            - ./*.tar

  publish:
    executor: publisher-environement
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load saved nodejs image
          command: docker load -i /tmp/workspace/${PROJECT_NAME}.tar
      - run:
          name: Rename nodejs image
          command: docker tag nodeapi ${DH_USERNAME}/${PROJECT_NAME}:latest
      - run:
          name: Login to Docker Hub
          command: docker login -u ${DH_USERNAME} --password ${DH_PASS}
      - run:
          name: Publish the Image
          command: docker push ${DH_USERNAME}/${PROJECT_NAME}:latest

workflows:
  version: 2.1
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - install:
          filters:
            branches:
              only: master
      - tests:
          requires:
            - install
          filters:
            branches:
              only: master
      - publish:
          requires:
            - build
            - tests
          filters:
            branches:
              only: master
